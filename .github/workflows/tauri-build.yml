name: Tauri应用构建与发布

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write
  repository-projects: write

jobs:
  build-and-release:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: 检出代码仓库
        uses: actions/checkout@v4

      - name: 设置Node.js环境
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 安装pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: 从标签提取版本号
        id: extract_version
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
        shell: bash

      - name: 同步版本号
        run: |
          mkdir -p scripts
          node scripts/sync-version.js ${{ env.VERSION }}
        shell: bash

      - name: 安装Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.platform.target }}
          toolchain: stable
          components: rustfmt, clippy

      - name: 缓存Rust依赖
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: 安装应用依赖
        run: pnpm install

      - name: 构建Tauri应用
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }} # 如果需要签名
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }} # 如果需要签名
          TAURI_TARGET: ${{ matrix.platform.target }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'AiMate ${{ github.ref_name }}'
          releaseBody: '点击下方资源下载并安装此版本。'
          releaseDraft: false
          prerelease: false
          args: --verbose
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 上传构建产物（macOS）
        if: matrix.platform.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-${{ matrix.platform.target }}
          path: |
            target/release/bundle/macos/*.app
            target/release/bundle/dmg/*.dmg

      - name: 上传构建产物（Windows）
        if: matrix.platform.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            target/release/bundle/msi/*.msi
            target/release/bundle/nsis/*.exe
